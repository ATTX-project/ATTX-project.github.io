buildscript {
  repositories {
    maven { url "${artifactRepoURL}/repository/attx-releases"}
  }
  dependencies {
    classpath "org.uh.hulib.attx.gradle:gradle-pullrequest-builder:1.6-SNAPSHOT"
  }
}

plugins {
    id "com.moowork.node" version "1.1.1"
}


apply plugin: "attx.pullrequest.gradle.github"
apply plugin: 'com.moowork.node'
apply plugin: 'base'

node {
    // Version of node to use.
    version = '7.10.0'

    // Version of npm to use.
    npmVersion = '4.2.0'

    // Base URL for fetching node distributions (change if you have a mirror).
    distBaseUrl = 'http://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
    workDir = file("${project.buildDir}/attx_project")
}

task installDependencies(type: Exec, dependsOn: 'npmInstall') {

    inputs.dir('${project.projectDir}/attx_project')

    executable = 'node_modules/.bin/gitbook'
    args = ['install', './attx_project', "${project.buildDir}", "--verbose"]
}

task buildDocs(type: Exec, dependsOn: 'npmInstall') {
    dependsOn installDependencies
    inputs.dir('${project.projectDir}/attx_project')

    executable = 'node_modules/.bin/gitbook'
    args = ['build', './attx_project', "${project.buildDir}", "--verbose"]
}

task serveDocs(type:Exec, dependsOn: 'npmInstall') {
    dependsOn installDependencies
    inputs.dir('${project.projectDir}/attx_project')

    executable = 'node_modules/.bin/gitbook'
    args = ['serve', './attx_project', "${project.buildDir}", '--verbose']
}

task distributeDocs(type: Copy) {
    dependsOn buildDocs
    from "${project.buildDir}"
    into "${project.projectDir}"
}

gitCommit.dependsOn distributeDocs

gitPullRequest {
    // where to publish to (repo must exist)
    githubUri = 'https://github.com/ATTX-project/ATTX-project.github.io'

    // github user name to use
    user = "${user}"

    // github password or better access token
    accessToken = "${token}"

    // the name the branch should start with (will be added by timestamp to avoid collisions)
    branchSuffix = 'dev'

    // the target branch to send pull request to
    master = 'master'

    // // optional, the folder to commit all new or changed files from (default=src)
    // source = '.'

    // optional, the title of the pull request
    title = "Automatic pull request: Jenkins build#${jenkinsBuild}"

    // // optional, the message of the commit
    message = "Commited by Jenkins build#${jenkinsBuild}."

}
